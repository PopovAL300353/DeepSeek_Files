<#
.SYNOPSIS
–¢–æ—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ü–ö ‚Üí GitHub —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫
#>

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
$localPath = "C:\Users\keepe\DeepSeek_Files"
$repoPath = "C:\Users\keepe\DeepSeek_Files"
$backupDir = "C:\DeepSeek_Backups"

# 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
if (-not (Test-Path $backupDir)) { 
    New-Item -Path $backupDir -ItemType Directory -Force | Out-Null 
}
$backupFolder = "$backupDir\Backup_$(Get-Date -Format 'yyyyMMdd_HHmmss')"
Copy-Item -Path $repoPath -Destination $backupFolder -Recurse -Force
Write-Host "[‚úÖ] –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backupFolder" -ForegroundColor Cyan

# 2. –û—á–∏—â–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–∫—Ä–æ–º–µ .git –∏ —Å–∫—Ä–∏–ø—Ç–∞)
Set-Location $repoPath
Get-ChildItem -Path $repoPath -Force | 
    Where-Object { $_.Name -ne ".git" -and $_.Name -ne "sync_repo.ps1" } | 
    Remove-Item -Recurse -Force

# 3. –ö–æ–ø–∏—Ä—É–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
robocopy $localPath $repoPath /MIR /NJH /NJS /NDL /NP /NFL /XD ".git" "DeepSeek_Backups" /XF "sync_repo.ps1"
Write-Host "[üîÑ] –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã" -ForegroundColor Green

# 4. –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
git add --all
$commitMessage = "üîÑ SYNC: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
git -c "i18n.commitEncoding=UTF-8" commit -m $commitMessage

# 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub
git push origin main
Write-Host "[‚úÖ] –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω! –ò–º–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã." -ForegroundColor Green